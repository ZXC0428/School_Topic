@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Mvc.Core.Fluent
@using X.PagedList.Web.Common
@model List<student_platformdb.borrow_key>

@{
    ViewData["Title"] = "管理者介面"; 
    var pagedList = (IPagedList)ViewBag.borrow_key;
    
}

<div class="btn_booked">
    <div class="bookedbtn" id = "review_bookedbtn" >
        <p>預約教室審核</p>
    </div>
    <div class="bookedbtn" id = "history_bookedbtn" >
        <p>預約教室歷史資料</p>
    </div>
    <div class="bookedbtn" id = "key_bookedbtn" style="background-color: rgb(242, 241, 241);">
        <p>鑰匙管理</p>
    </div>
    <div class="bookedbtn" id = "keyhistory_bookedbtn">
        <p>鑰匙歷史資料</p>
    </div>
    <div class="bookedbtn" id = "classroom_bookedbtn" >
        <p>教室介面修改</p>
    </div>
    <div class="bookedbtn" id = "rule_bookedbtn" >
        <p>預約規則修改</p>
    </div>
</div>


@if (Model != null  && Model.Count > 0) {
    <div class="classroom_management_rectangle" id="keyContent">
    <div class="classroom_management_table-container">
        <table class="classroom_management_table">
            <thead>
                <tr class="usagetitle">
                    <th>借用時間</th>
                    <th>借用教室</th>
                    <th>班級</th>
                    <th>學號</th>
                    <th>姓名</th>
                    <th></th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if(Model != null) {
                    @foreach (var keydata in Model) {
                        <tr class="usagecontent">
                            <td> 
                                <div>@Html.Raw(keydata.borrow_time?.ToString("yyyy-MM-dd ttHH:mm:ss").Replace(" ", "<br>"))</div>
                            </td>
                            <td>
                                <div>@keydata.Classroom_id</div>
                            </td>
                            <td>
                                <div>@keydata.Class</div>
                            </td>
                            <td>
                                <div>@keydata.Student_id</div>
                            </td>
                            <td>
                                <div>@keydata.Student_name</div>
                            </td>
                            
                            <td>
                                <button class="btn btn-primary" onclick="showkeySuccessModal('@keydata.borrow_time', '@keydata.Classroom_id', '@keydata.Class', '@keydata.Student_id' ,'@keydata.Student_name')">確定歸還</button>
                            </td>
                        
                        </tr>
                        <tr>
                            <td colspan="7">
                                <hr size="7">
                            </td>
                        </tr>
                    }
                } else {
                    <div class="classroom_management_rectangle" id="keyContent">
                        <p>無借用紀錄</p>
                    </div>
                }
            </tbody>
            @if (Model != null && pagedList != null)
            {
                <td class="text-muted" colspan="5" style="padding: 0px !important;">
                    第 @(pagedList.PageCount < pagedList.PageNumber ? 0 : pagedList.PageNumber) 頁，共 @pagedList.PageCount 頁。
                    每頁 @pagedList.PageSize 筆資料，全部共有 @pagedList.TotalItemCount 筆資料。
                </td>

            }
        </table>
        <hr>
    </div>
</div>
 <div class="page_object">
    <nav aria-label="...">
        <ul class="pagination">
            <li class="@(pagedList.PageNumber == 1 ? "page-item disabled" : "page-item")">
                <a class="page-link" href="@Url.Action("history_booked", new { page = 1 })" tabindex="-1" aria-disabled="true">Previous</a>
            </li>
            @foreach (var pageNumber in GeneratePageNumbers(pagedList.PageNumber, pagedList.PageCount))
            {
                if (pageNumber == -1)
                {
                    <li class="page-item disabled"><span class="page-link">...</span></li>
                }
                else
                {
                    <li class="@(pagedList.PageNumber == pageNumber ? "page-item active" : "page-item")">
                        <a class="page-link" href="@Url.Action("history_booked", new { page = pageNumber })">@pageNumber</a>
                    </li>
                }
            }
            <li class="@(pagedList.PageNumber == pagedList.PageCount ? "page-item disabled" : "page-item")">
                <a class="page-link" href="@Url.Action("history_booked", new { page = pagedList.PageNumber + 1 })">Next</a>
            </li>
        </ul>
    </nav>
</div>
}
else{
    <div class="classroom_management_rectangle" id="keyContent">
        <div class="classroom_management_table-container">
            <p>無借用資料</p>
        </div>
    </div>

}

<script>
@functions {
    public List<int> GeneratePageNumbers(int currentPage, int totalPages)
    {
        var pageNumbers = new List<int>();

        // 添加當前頁面
        pageNumbers.Add(currentPage);

        // 添加當前頁面的前面幾個頁碼
        for (int i = currentPage - 1; i >= Math.Max(currentPage - 2, 1); i--)
        {
            pageNumbers.Insert(0, i);
        }

        // 添加當前頁面的後面幾個頁碼
        for (int i = currentPage + 1; i <= Math.Min(currentPage + 2, totalPages); i++)
        {
            pageNumbers.Add(i);
        }

        // 如果開始沒有1，添加省略號
        if (!pageNumbers.Contains(1))
        {
            pageNumbers.Insert(0, 1);
            pageNumbers.Insert(1, -1); // 使用-1來表示省略號
        }

        // 如果結尾不是最後一頁，添加省略號
        if (!pageNumbers.Contains(totalPages))
        {
            pageNumbers.Add(-1); // 使用-1來表示省略號
            pageNumbers.Add(totalPages);
        }

        return pageNumbers;
    }
}

</script>

<script>
    //時間格式轉換
    function formatDateTime(dateTimeStr) {
    var parts = dateTimeStr.split(' ');
    var datePart = parts[0];
    var amPm = parts[1];
    var timePart = parts[2];

    // 轉換日期格式
    var dateParts = datePart.split('/');
    var formattedDate = `${dateParts[0]}-${dateParts[1].padStart(2, '0')}-${dateParts[2].padStart(2, '0')}`;

    // 轉換時間為24小時制
    var timeParts = timePart.split(':');
    if (amPm === '下午' && +timeParts[0] < 12) {
        timeParts[0] = (+timeParts[0] + 12).toString();
    } else if (amPm === '上午' && +timeParts[0] === 12) {
        timeParts[0] = '00';
    }
    var formattedTime = `${timeParts[0].padStart(2, '0')}:${timeParts[1]}:${timeParts[2]}`;

    return `${formattedDate}T${formattedTime}`;
    }

    //點選取消預約跳出訊息框
    function showkeySuccessModal(borrow_time, Classroom_id, Class,Student_id,Student_name) {
        // 使用 jQuery 選擇模態框並顯示
        $('#keysuccessModal').modal('show');
        // 存儲要取消預約的數據，以便在確認時使用
        $('#keysuccessModal').data('cancellationData', { borrow_time: borrow_time, Classroom_id: Classroom_id, Class: Class ,Student_id: Student_id , Student_name: Student_name});
    }
    function returnToQueryPage1() {
        clearTimeout(reloadTimeout); // 清除延遲，避免重複執行重新整理頁面
        location.reload(); // 重新整理頁面
    }
    //不取消返回原頁面
    function returnToQueryPage() {
        // 在這裡添加返回查詢頁面的相應邏輯
        window.location.href = '@Url.Action("key_classroom_management", "ClassroomReserve")';
    }

   
    
    //確定取消 將資料傳到後端控制器
    function key_confirmCancellation() {
        // 取得要取消預約的資訊
        var cancellationData = $('#keysuccessModal').data('cancellationData');
        console.log("Cancellation Data:", cancellationData);

       // 時間轉換
        var formattedborrow_time = formatDateTime(cancellationData.borrow_time);

        // 資料存到requestData傳到後端
        var requestData = {
            borrow_time: formattedborrow_time,
            Classroom_id : cancellationData.Classroom_id,
            Student_id : cancellationData.Student_id,
            Class : cancellationData.Class,
            Student_name : cancellationData.Student_name,
            borrow : 'borrow'
        };
        console.log("要發送的 JSON 數據：", JSON.stringify(requestData));

        // 使用 Axios 發送 POST 請求
        axios.post('/ClassroomReserve/key_classroom_management', requestData)
            .then(response => keyhandleSuccess(response.data))
            .catch(error => keyhandleError(error));
    }

    function keyhandleSuccess(data) {
    // 成功取消跳这边
    if (data.success) {
        $('#keysuccessModal').modal('hide'); // 隐藏其他 Modal
        $('#keysuccessModal2').modal('show'); // 先显示 Modal
        
       
        
        // 延迟一段时间后重新加载页面
        setTimeout(function() {
            location.reload(); // 重新加载页面
        }, 800);
    } else {
        alert('取消預約失敗！' + data.message);
    }
}


    function keyhandleError(error) {
         處理錯誤
        alert('取消預約失敗！');
        console.error('Fetch Error:', error);
    }
</script>


<div id="keysuccessModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <p>確定已歸還</p>
                <button class="btn btn-primary" onclick="key_confirmCancellation()">確認</button>
                <button type="button" class="btn btn-danger" onclick="returnToQueryPage()">取消</button>
            </div>
        </div>
    </div>
</div>
<!-- 預約教室審核 預約審核成功 -->
<div id="keysuccessModal2" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <p>歸還成功</p>
            </div>
        </div>
    </div>
</div>





<script>
    // 获取按钮元素
    var reviewBtn = document.getElementById("review_bookedbtn");
    var historyBtn = document.getElementById("history_bookedbtn");
    var keyBtn = document.getElementById("key_bookedbtn");
     var keyhistoryBtn = document.getElementById("keyhistory_bookedbtn");
    var classroomBtn = document.getElementById("classroom_bookedbtn");
    var ruleBtn = document.getElementById("rule_bookedbtn");

    // 添加点击事件处理程序
    reviewBtn.addEventListener("click", function() {
        window.location.href = "booked_classroom_management"; // 将页面重定向到“review_page.html”
    });

    historyBtn.addEventListener("click", function() {
        window.location.href = "history_classroom_management"; // 将页面重定向到“history_page.html”
    });

    keyBtn.addEventListener("click", function() {
        window.location.href = "key_classroom_management"; // 将页面重定向到“key_management_page.html”
    });
    keyhistoryBtn.addEventListener("click", function() {
        window.location.href = "keyhistory_classroom_management"; // 将页面重定向到“key_management_page.html”
    });

    classroomBtn.addEventListener("click", function() {
        window.location.href = "interface_classroom_management"; // 将页面重定向到“classroom_interface_page.html”
    });

    ruleBtn.addEventListener("click", function() {
        window.location.href = "rule__classroom_management"; // 将页面重定向到“rule_modify_page.html”
    });
</script>