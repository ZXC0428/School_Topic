@model List<TA.TATable>
@using Newtonsoft.Json
@{
    ViewData["Title"] = "教學助理預約";
    var userInput = Context.Session.GetString("User");
    dynamic user = null;
    if (!string.IsNullOrEmpty(userInput))
    {
        user = JsonConvert.DeserializeObject<dynamic>(userInput);
    }
}
<head>
    <meta charset="UTF-8">
    <title>週間課程時間表</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f0f0f0;
        }
        .schedule-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            border-color: #334c72;/* 將表格邊框顏色設置為藍色 */
            border:3px #334c72 solid;

        }
        .schedule-table th,
        .schedule-table td {
            border: 1px solid #334c72;
            padding: 8px;
            text-align: center;
            cursor: pointer;
        }
        .schedule-table th {
            background-color: #eeeff0;
            color: #334c72; 
        }
        .schedule-table td {
            background-color:#334c72 ;
            color: #eeeff0;
            font-weight: bold;

        }
        .detail-popup {
            display: none; /* 默認隐藏 */
            position: fixed; /* 固定定位 */
            z-index: 9999; /* 設定比其他元素高的 z-index 值 */
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto; /* 允許滾動 */
            background-color: rgb(0,0,0); /* 半透明黑色背景 */
            background-color: rgba(0,0,0,0.4); /* 半透明黑色背景 */
        }
        .detail-content {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 2px 2px 10px rgba(0,0,0,0.3);
            z-index: 10000;
            max-width: 80%; /* 最大寬度，防止視窗過大 */
            max-height: 80%; /* 最大高度，防止視窗過大 */
            min-width: 300px; /* 最小寬度 */
            min-height: 200px; /* 最小高度 */
            overflow-y: auto; /* 內容超出時顯示滾動條 */
        }

        .close-btn {
            float: right;
            cursor: pointer;
        }

        .admin-button {
            position: fixed;
            right: 20px;
            bottom: 20px;
            background-color: #4CAF50; /* 绿色背景 */
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 15px; /* 圆角边框 */
            text-decoration: none;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s;
            font-weight: bold;
        }

        .admin-button:hover {
            background-color: #45a049; /* 鼠标悬停时的颜色 */
            color: #ffffff; /* 滑過時修改顏色，這裡以紅色為例 */
            text-decoration: none; /* 移除底線 */
        }

        .Course-button {
            position: fixed;
            right: 140px;
            bottom: 20px;
            background-color: #f18d40; /* 绿色背景 */
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 15px; /* 圆角边框 */
            text-decoration: none;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s;
            font-weight: bold;
        }

        .Course-button:hover {
            background-color: #cf881e; /* 鼠标悬停时的颜色 */
            color: #ffffff; /* 滑過時修改顏色，這裡以紅色為例 */
            text-decoration: none; /* 移除底線 */
        }

        .reserve-btn {
            display: block; /* 讓按鈕單獨佔一行 */
            margin: 20px auto; /* 上下邊距20px, 水平居中 */
            padding: 10px 20px;
            background-color: #4A90E2; /* 藍色背景 */
            color: white;
            border: none;
            border-radius: 15px; /* 圓角邊框 */
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .reserve-btn:hover {
            background-color: #357ABD; /* 鼠标悬停时的颜色变化 */
        }
    </style>
</head>
<body>

    @if (User != null && user != null)
    {
        var Level = user?.Level;
        if(Level == "管理員")
        {
            <a href='@Url.Action("AddCourse", "TAReserve")' class="admin-button">新增課程</a>
            <a href='@Url.Action("Courseeditor", "TAReserve")' class="Course-button">編輯課程</a>
        }
        <input type="hidden" id="userId" value="@user?.studentID" />
    }

    <table class="schedule-table">
        <tr>
            <th>時間/星期</th>
            <th>日</th>
            <th>一</th>
            <th>二</th>
            <th>三</th>
            <th>四</th>
            <th>五</th>
            <th>六</th>
        </tr>
        @foreach (var time in Model.Select(t => t.Startime).Distinct().OrderBy(t => t))
        {
            <tr>
                <td>@time.Value.ToString(@"hh\:mm") - @time.Value.Add(TimeSpan.FromHours(1)).ToString(@"hh\:mm")</td>
                @foreach (var dayOfWeek in Enum.GetValues(typeof(DayOfWeek)).Cast<DayOfWeek>())
                {
                    var course = Model.FirstOrDefault(item => item.Date.HasValue && item.Date.Value.DayOfWeek == dayOfWeek && item.Startime == time);
                    if (course != null)
                    {
                        <td data-detail="@course.CourseName" 
                            data-startime="@course.Startime.Value.ToString(@"hh\:mm")" 
                            data-overtime="@course.Overtime.Value.ToString(@"hh\:mm")"
                            data-date="@course.Date.Value.ToString("yyyy-MM-dd")"
                            data-taname="@course.TAName">
                            @course.CourseName
                        </td>

                    }
                    else
                    {
                        <td></td>
                    }
                }
            </tr>
            <tr style="padding: 0;">
                    <td colspan="8" style="padding: 0;"><hr style="margin: 0;color:white;"></td>
            </tr>
        }
        <!-- 繼續添加其他時間段的行 -->
    </table>

    <!-- 展示課程 -->
    <div class="detail-popup" onclick="closeDetail()">
        <div class="detail-content" onclick="event.stopPropagation();">
            <span class="close-btn" onclick="closeDetail()">X</span>
            <!-- 添加一個下拉選單來選擇日期 -->
            <select id="date-select"></select>
            <div id="detail-content"></div>
            <!-- 預約按鈕 -->
            <button id="reserve-button" class="reserve-btn">預約</button>
        </div>
    </div>


    <script>
        //展示課程
        document.querySelectorAll('.schedule-table td').forEach(function(td) {
            td.onclick = function(event) {
                var detail = this.getAttribute('data-detail');
                var taname = this.getAttribute('data-taname');
                var startTime = this.getAttribute('data-startime');
                var endTime = this.getAttribute('data-overtime');

                if (detail && startTime && endTime) {
                    var contentHtml = '<div style="margin-bottom: 10px;margin-top: 10px;">' + detail + '</div>'
                                    + '<div style="margin-bottom: 10px;">' + taname + '</div>'
                                    + '<div style="margin-bottom: 10px;">時間：' + startTime + ' - ' + endTime + '</div>';
                    var detailContent = document.getElementById('detail-content');
                    detailContent.innerHTML = contentHtml;

                    getAllDatesForCourse(detail, function(availableDates) {
                        var dateSelect = document.getElementById('date-select');
                        dateSelect.innerHTML = '';

                        availableDates.forEach(function(date) {
                            var option = document.createElement('option');
                            option.value = date;
                            option.textContent = date;
                            dateSelect.appendChild(option);
                        });

                        document.querySelector('.detail-popup').style.display = 'flex';
                    });
                }
                event.stopPropagation();
            };
        });

        function getAllDatesForCourse(courseName, callback) {
            // 假設後端有一個API可以根據課程名稱獲取可用日期
            var apiUrl = '/api/dates/' + courseName; // 請根據實際API路徑調整

            fetch(apiUrl)
                .then(response => response.json())
                .then(data => {
                    callback(data); // 將獲取的日期數據傳遞給回調函數
                })
                .catch(error => console.error('Error fetching dates:', error));
        }

        function closeDetail() {
            document.querySelector('.detail-popup').style.display = 'none';
        }

        // 預約按鈕

        @if (User != null && !string.IsNullOrEmpty(userInput))
        {
            @:var userId = @Html.Raw(userInput);
        }
        else
        {
            @:var userId = null;
        }

        document.getElementById('reserve-button').onclick = function() {
            var selectedDate = document.getElementById('date-select').value;
            var courseName = document.querySelector('#detail-content div').textContent;
            var userId = document.getElementById('userId') ? document.getElementById('userId').value : null;

            if (!userId) {
                alert('用戶未登入！');
                return;
            }

            fetch('/api/reserve', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ courseName: courseName, date: selectedDate, userId: userId })
            })
            .then(response => {
                if (!response.ok) {
                    throw response;
                }
                return response.json();
            })
            .then(data => {
                alert(data.message); // 使用後端回傳的訊息
                closeDetail(); // 關閉詳情彈窗
            })
            .catch(error => {
                error.json().then(body => {
                    alert(body.message); // 顯示從後端返回的錯誤信息
                });
            });
        };
    </script>
</body>